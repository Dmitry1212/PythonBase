# 2. Реализовать класс Road (дорога), в котором определить атрибуты:
# length (длина), width (ширина). Значения данных атрибутов должны передаваться при создании
# экземпляра класса. Атрибуты сделать защищенными.
# Определить метод расчета массы асфальта, необходимого для покрытия всего дорожного полотна.
# Использовать формулу: длина * ширина * масса асфальта для покрытия одного кв метра дороги асфальтом,
# толщиной в 1 см * чи сло см толщины полотна. Проверить работу метода.
# Например: 20м * 5000м * 25кг * 5см = 12500 т

class Road:
    _length = 0
    _width = 0

    mass_dict = {1: ('асфальтовая мастика', 1100),
                 2: ('асфальтовая масса', 1300),
                 3: ('асфальт литой', 1500),
                 4: ('асфальт прессованный', 2000),
                 5: ('асфальт в полах и стяжках', 1800),
                 6: ('асфальтобетон', 2300)}

    thickness_dict = {1: ('двор', 0.04),
                      2: ('парковка', 0.06),
                      3: ('автомобильная дорога', 0.08)}

    def __init__(self, l, w):
        self._length = l
        self._width = w

    def mass(self, mass, thickness):
        return round(
            (self._length * self._width * self.mass_dict.get(mass)[1] * self.thickness_dict.get(thickness)[1]) / 1000,
            1)


my_road = Road(5000, 10)
mater = 2
road_type = 1
print(f'Масса дорожного плотна составляет: {my_road.mass(mater, road_type)} тонн \n \
    Материал: {my_road.mass_dict.get(mater)[0]}; \n \
    Целевое назнаение: {my_road.thickness_dict.get(road_type)[0]} ;\n \
    Длина дороги: {my_road._length}; \n \
    Ширина дороги: {my_road._width}; ')
